# language: zh-TW
功能: 端到端訂單支付流程
  作為一個電商系統
  我想要完整的訂單和支付流程
  以便客戶可以從下單到付款完成整個購物流程

  背景:
    假設 訂單服務已啟動
    而且 支付服務已啟動
    而且 RabbitMQ消息隊列已配置
    而且 數據庫已初始化

  場景: 完整的成功訂單支付流程
    假設 客戶ID為 "CUST-E2E-001"
    而且 訂單金額為 299.99 元
    而且 信用卡號為 "4111111111111111"
    而且 信用卡有效期為 "12/25"
    而且 CVV為 "123"
    當 客戶創建訂單
    那麼 訂單應該被創建並狀態為 "PENDING"
    而且 應該發送支付請求到支付服務
    當 支付服務處理支付請求
    那麼 支付應該成功
    而且 應該發送支付確認到訂單服務
    當 訂單服務收到支付確認
    那麼 訂單狀態應該更新為 "PAID"
    而且 整個流程應該在 5 秒內完成

  場景: 完整的失敗訂單支付流程
    假設 客戶ID為 "CUST-E2E-002"
    而且 訂單金額為 199.99 元
    而且 信用卡號為 "1234567890123456"
    而且 信用卡有效期為 "12/25"
    而且 CVV為 "123"
    當 客戶創建訂單
    那麼 訂單應該被創建並狀態為 "PENDING"
    而且 應該發送支付請求到支付服務
    當 支付服務處理支付請求
    那麼 支付應該失敗
    而且 應該發送支付失敗通知到訂單服務
    當 訂單服務收到支付失敗通知
    那麼 訂單狀態應該更新為 "PAYMENT_FAILED"

  場景: 消息重試和冪等性測試
    假設 客戶ID為 "CUST-E2E-003"
    而且 訂單金額為 150.00 元
    而且 信用卡號為 "4111111111111111"
    而且 信用卡有效期為 "12/25"
    而且 CVV為 "123"
    而且 消息隊列配置了重試機制
    當 客戶創建訂單
    而且 支付請求消息被重複發送 3 次
    那麼 只應該創建一個支付記錄
    而且 訂單狀態最終應該是 "PAID"
    而且 不應該有重複的支付

  場景: Outbox Pattern 一致性測試
    假設 客戶ID為 "CUST-E2E-004"
    而且 訂單金額為 89.99 元
    而且 數據庫事務配置了 Outbox Pattern
    當 客戶創建訂單
    那麼 訂單應該保存到數據庫
    而且 Outbox事件應該被創建
    而且 消息應該最終被發送
    而且 Outbox事件應該被標記為已處理

  場景: 高並發訂單處理
    假設 有 10 個並發客戶
    而且 每個客戶的訂單金額為 50.00 元
    而且 所有客戶使用有效的信用卡
    當 所有客戶同時創建訂單
    那麼 所有 10 個訂單都應該被成功創建
    而且 所有支付都應該成功處理
    而且 所有訂單狀態都應該是 "PAID"
    而且 不應該有數據競爭或重複處理

  場景: 系統恢復和消息補償
    假設 客戶ID為 "CUST-E2E-005"
    而且 訂單金額為 75.50 元
    而且 支付服務在處理過程中重啟
    當 客戶創建訂單
    而且 支付請求消息已發送
    而且 支付服務重啟後恢復
    那麼 支付請求應該被重新處理
    而且 最終訂單狀態應該是 "PAID"
    而且 系統應該保持數據一致性